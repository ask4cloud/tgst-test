version: 0.2

env:
  parameter-store:
    TF_VERSION: "/zip/tf_version"
    DIST_OUTPUT_BUCKET: "/zip/dist_output_bucket"
    TF_VAR_aws_region: "/tgw/aws_region"
    TF_VAR_appenv: "/tgw/app-env"

  variables:
    SOLUTION_NAME: "test-solution-name"
    VERSION: "0.1"

    
phases:

  install:
    commands:
      # install required binaries for tgw
      # - "curl -s -qL -o /usr/bin/jq https://stedolan.github.io/jq/download/linux64/jq"
      # - "chmod +x /usr/bin/jq"
      # - "cd /usr/bin"
      # - "curl -s -qL -o terraform.zip https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip"
      # - "unzip -o terraform.zip"
      # - "chmod +x /usr/bin/terraform"
      # - "/usr/bin/terraform --version"
      # - "curl -L -o /tmp/tflint.zip https://github.com/terraform-linters/tflint/releases/download/v0.13.2/tflint_linux_amd64.zip && unzip /tmp/tflint.zip -d /usr/local/bin"
      # - "tflint --version"
      # - "wget -O /usr/local/bin/tfsec https://github.com/liamg/tfsec/releases/download/v0.19.0/tfsec-linux-amd64 && chmod +x /usr/local/bin/tfsec"
      # - "tfsec --version"
      - "aws --version"
      - "pip3 install -r $CODEBUILD_SRC_DIR/source/testing_requirements.txt"

  pre_build:
    commands:
      - echo "pre build step"
      - export AWS_DEFAULT_REGION=${TF_VAR_aws_region}
      - export appenv=${TF_VAR_appenv}
      # - export current_account=${SPOKE_ACCOUNT}
      - echo "AWS_DEFAULT_REGION = "${AWS_DEFAULT_REGION}
      - echo "appenv = "${appenv}
      - echo "test env1"
      # - echo "Current AWS Account = "${current_account}

  build:
    commands:
      #- cd "$CODEBUILD_SRC_DIR/terraform"
      # - find . -name ".terraform" -prune -o -type f -name "*.tf" -exec dirname {} \;|sort -u | while read m; do (cd "$m" && tflint && echo "âˆš $m") || exit 1 ; done
      # - "tfsec ./"
      # - echo "terraform"
      # - terraform init -backend-config="bucket=${BACKEND_BUCKET}" -backend-config="key=terraform.tfstate" -backend-config="region=${TF_VAR_aws_region}" -backend-config="dynamodb_table=tgw-tf-lock"
      # - terraform plan -input=false -var-file=${TF_VAR_appenv}/tgw.tfvars
      - cd "$CODEBUILD_SRC_DIR/deployment"
      - chmod +x ./run-unit-tests.sh
      - ./run-unit-tests.sh
      - chmod +x ./build-lambda-only.sh
      - ./build-lambda-only.sh ${DIST_OUTPUT_BUCKET} ${SOLUTION_NAME} ${VERSION}
      - aws s3 cp ./regional-s3-assets/ s3://${DIST_OUTPUT_BUCKET}/${SOLUTION_NAME}/${VERSION}/ --recursive --acl bucket-owner-full-control 
      - echo "---------DEBUG-----FOR------"
      - unzip -l ./regional-s3-assets/aws-transit-network-orchestrator-sm.zip
 
  post_build:
    commands:
      - echo "terraform completed on `date`"


artifacts:
  files:
    - '**/*'
